飞贷金融科技第一届程序设计大赛试题（初赛：1,2,3  复赛：4）

用户最大规模为1亿，用户拥有信用评分(信用评分为非负整数，且小于100万)，初始评分不固定而且全部存储在一个乱序的大文件中
（每行的内容格式是用户名,信用评分）。排名规则：信用评分相同，则名次按用户在文件行中出现的先后顺序排序。（限定内存使用为512MB）
    1、给定用户的信用评分名次。
	2、Top 100 的信用评分的用户。
	3、信用评分重复次数最高的10个信用评分。
    4、对乱序的大文件按信用评分从小到大进行排序并生成全排序的文件。
    
 解题思路
	初赛：由于内存的限制，如何尽可能少的读文件，尽可能少的写文件？三道题能不能只读一次文件
		a.读两次文件：第一次扫描指定用户ID的分数和对应的序号；第二次全文件扫描在二叉树中保存用户的分数并统计相应分数的个数。
		b.平衡二叉树的构建，它的特性、二叉树的共性（比如：遍历方式）
		c.用LinkedHashMap缓存需要排序的数据，用Collections.sort对map进行排序
	思考：构建二叉树耗时较多，用户规模较小（1亿），运行时间相对比较吃亏；当用户规模越大（10亿），二叉树这种解题思路的耗时相对越短
	
	复赛：归并思想
		a.将大文件拆分为两百个，拆分原则为：当前用户位于哪个区间 score / (SCORE_SCOPE / SUB_FILE_NUM)	
		b.按顺序对每一个子文件进行排序，并且相继输出到新的汇总排序文件中
		
	思考：拆分两百个文件有投机的嫌疑，如果数据规模为十亿怎样去扩容？存在数据倾斜的话，很容易导致内存溢出？怎样优化
    
    