https://blog.csdn.net/u014039577/article/details/82387302
IO基础考察
题目一：用户在控制台输出字符回显
要求：
	1.在控制台输出字符串，按回车后，要求控制台可以回显该字符串，如运行JAVA程序后，在控制台输入“test”回车后，控制台可以回显test.
	2.限定使用JAVA中io包下面的类来处理，不允许使用java.util中的scan方法处理.
	3.代码编写时，使用JAVA提供的BufferReader\BufferWriter类，提升代码运行效率.
	4.输入字符串可以包括中文，该代码可支持在不同操作系统下运行，避免出现乱码.
	
并发编程考察
题目一：单实例的实现。提供一个懒汉模式的单实例类实现。
要求：
	1.考虑线程安全。
	2.基于junit提供测试代码，模拟并发，测试线程安全性，并给出对应的断言。

题目二：
	.假设本地有一个文件夹，文件夹下面有若干文件（文件数大于50小于100），文件的存储格式是文本格式（后缀名是.txt），文件的大小每个文件不会超过10k。
	.文件格式如下：
		2000102,100,98.3
		2000103,101,73.3
		2000104,102,98.3
		2000105,100,101.3
		2000106,101,45.3
		......
	.文件格式说明：文件每行都由三列构成，第一列是一个id，第二列是分组groupId，第三列是指标quota。
			   id的数据类型是String，groupId的数据类型是String,quota的数据类型是float。
	.功能要求：
		1.把所有文件里面的内容取出来一起按照分组进行排序（注意是所有内容在一起），输出按照分组升序排序之后，每个分组下面的最小指标值。
		     比如上面的数据输出结果为：
		     100,2000102,98.3
		     101,2000106,45.3
		     102,2000104,98.3
		     
	.非功能要求
		1.文件读取要有线程池来执行，线程池的大小固定位10，文件内容需要存储到指定的内容数据结构当中。
		2.查找要求有独立线程来执行，直接消费读取线程池产生的内存数据结构
		3.文件读取和排序要求并发作业，文件读取只要产生了数据，就可以把数据交给排序线程进行消费，计算最小值。
	.代码结构要求
		1.从上面的要求语义中抽象出合适的设计模式。
		2.需要考虑多线程的并发控制，同步机制。
		3.代码实现智能用JDK1.6或者1.8自带的工具



