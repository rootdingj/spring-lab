线程池

避免死锁
	死锁：两个或多个线程需要在几个共享对象上获取锁；每个线程已经分别锁定一个对象，而且正在等待锁定另一个对象，
		     形成了一种相互等待的情形。
		例如：
		线程1：
			synchronized(object1){
					synchronized(object2){
					}
			}
		
		线程2：
			synchronized(object2){
					synchronized(object1){
					}
			}

	避免死锁：使用一种资源排序的技术可以轻易的避免死锁的发生；该技术是给每个需要锁的对象指定一个顺序，
			        确保每个线程都按这个顺序来获取锁。
	如上例：假设按object1、object2的顺序对两个对象排序。采用资源排序，线程2必须先获取object1上的锁，
	   	           然后才能获取object2上的锁。一旦线程1获取了object1上的锁，那线程2必须等待object1上的锁，
	   	           所以线程1就能获取到object2上的锁。
						
